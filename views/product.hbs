<section class="container mx-auto flex-grow max-w-[1200px] border-b py-5 lg:flex lg:flex-row lg:py-10">
    <!-- sidebar  -->
    <section class="hidden w-[300px] flex-shrink-0 px-4 lg:block">
        <div class="flex border-b pb-5">
            <div class="w-full">
                <p class="mb-3 font-medium">FILTERS</p>
                <div id="filter-container"></div>
            </div>
        </div>
    </section>
    <!-- /sidebar  -->

    <div>
        <div class="mb-5 flex items-center justify-between px-5">
            <div class="flex gap-3">
                <button class="flex items-center justify-center border px-6 py-2">
                Sort by
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="mx-2 h-4 w-4"
                >
                    <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                    />
                </svg>
                </button>
            </div>

            {{!-- <div class="hidden gap-3 lg:flex">
                <button class="border bg-amber-400 py-2 px-2">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="h-5 w-5"
                >
                    <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z"
                    />
                </svg>
                </button>

                <button class="border py-2 px-2">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="h-5 w-5"
                >
                    <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zM3.75 12h.007v.008H3.75V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm-.375 5.25h.007v.008H3.75v-.008zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                    />
                </svg>
                </button>
            </div> --}}
        </div>

        <section class="product-list mx-auto grid max-w-[1200px] grid-cols-2 gap-3 px-5 pb-10 lg:grid-cols-3" >
            <!-- Products -->
            {{#each products}}
            <div class="flex flex-col">
                <div class="relative flex">
                    <img
                        class=""
                        src="{{this.imageUrl}}"
                        alt="{{this.name}}"
                    />
                    <div
                        class="absolute flex h-full w-full items-center justify-center gap-3 opacity-0 duration-150 hover:opacity-100"
                    >
                        <a
                        href="/detail/{{formatName this.name}}"
                        class="flex h-8 w-8 cursor-pointer items-center justify-center rounded-full bg-amber-400"
                        >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            class="h-4 w-4"
                        >
                            <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
                            />
                        </svg>
                        </a>
                        <span
                        class="flex h-8 w-8 cursor-pointer items-center justify-center rounded-full bg-amber-400"
                        >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 24 24"
                            fill="currentColor"
                            class="h-4 w-4"
                        >
                            <path
                            d="M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z"
                            />
                        </svg>
                        </span>
                    </div>

                    {{#if this.discount}}
                        <div
                        class="absolute right-1 mt-3 flex items-center justify-center bg-amber-400"
                        >
                        <p class="px-2 py-2 text-sm">&minus; {{this.discount}}&percnt; OFF</p>
                        </div>
                    {{/if}}
                </div>

                <div>
                    <p class="mt-2">{{this.name}}</p>
                    {{#if this.discountedPrice}}
                    <div>                        
                        <span class="font-medium text-violet-900">
                            <span class="three-digit">{{this.discountedPrice}}</span>
                            <span>VND</span>
                        </span>
                        <span class="text-sm text-gray-500 line-through">
                            <span class="three-digit">{{this.price}}</span>
                            <span>VND</span>
                        </span>
                    </div>
                    {{else}} 
                    <div class="font-medium text-violet-900">
                        <span class="three-digit">{{this.price}}</span>
                        <span>VND</span>
                    </div>
                    {{/if}}
                </div>

                <div class="flex items-center">
                    <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="h-4 w-4 text-yellow-400"
                    >
                    <path
                        fill-rule="evenodd"
                        d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z"
                        clip-rule="evenodd"
                    />
                    </svg>

                    <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="h-4 w-4 text-yellow-400"
                    >
                    <path
                        fill-rule="evenodd"
                        d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z"
                        clip-rule="evenodd"
                    />
                    </svg>

                    <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="h-4 w-4 text-yellow-400"
                    >
                    <path
                        fill-rule="evenodd"
                        d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z"
                        clip-rule="evenodd"
                    />
                    </svg>

                    <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="h-4 w-4 text-yellow-400"
                    >
                    <path
                        fill-rule="evenodd"
                        d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z"
                        clip-rule="evenodd"
                    />
                    </svg>

                    <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="h-4 w-4 text-gray-200"
                    >
                    <path
                        fill-rule="evenodd"
                        d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z"
                        clip-rule="evenodd"
                    />
                    </svg>
                    <p class="text-sm text-gray-400">(38)</p>
                </div>

                <div>
                    <button class="my-5 h-10 w-full bg-violet-900 text-white">
                    Add to cart
                    </button>
                </div>
            </div>
            {{/each}}
            <!-- /Products -->
        </section>

        <nav class="justify bg-center">
            <ul class="inline-flex -space-x-px text-sm">
                <li>
                <a href="#" data-page="previous" class="pagination-link flex items-center justify-center px-3 h-8 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
                    Previous</a>
                </li>
                
                <li>
                <a href="#" data-page="next" class="pagination-link flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
                    Next</a>
                </li>
            </ul>
        </nav>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const paginationLinks = document.querySelectorAll(".pagination-link");

        paginationLinks.forEach(link => {
            link.addEventListener("click", function (event) {
                event.preventDefault();

                let currentPage = getCurrentPage();
                let newPage = this.dataset.page === "next" ? currentPage + 1 : currentPage - 1;

                if (newPage < 1) newPage = 1;

                // Cập nhật URL
                const newUrl = updateUrlWithPage(newPage);
                window.history.pushState({ page: newPage }, "", newUrl);

                // Gửi request AJAX để tải dữ liệu trang mới
                fetchData(newPage);
            });
        });

        // Hàm lấy số trang hiện tại từ URL
        function getCurrentPage() {
            const urlParams = new URLSearchParams(window.location.search);
            let page = parseInt(urlParams.get('page')) || 1;
            return page;
        }

        // Hàm tạo lại URL với tham số page mới
        function updateUrlWithPage(page) {
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('page', page); // Cập nhật tham số page
            return `${window.location.pathname}?${urlParams.toString()}`;
        }

        function apiToFetchData(page) {
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('page', page); // Cập nhật tham số page
            return `/api${window.location.pathname}?${urlParams.toString()}`;
        }

        // Hàm gửi request AJAX và cập nhật nội dung trang
        function fetchData(page) {
            const url = apiToFetchData(page);
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    updateProductList(data.products);
                })
                .catch(error => {
                    console.error("Error fetching data:", error);
                });
        }

        // Hàm cập nhật sản phẩm vào trang
        function updateProductList(products) {
            const productContainer = document.querySelector(".product-list");
            let newProductList = "";

            products.forEach(product => {
                newProductList += `
                    <div class="flex flex-col">
                        <div class="relative flex">
                            <img src="${product.imageUrl}" alt="${product.name}" />
                            <div class="absolute flex h-full w-full items-center justify-center gap-3 opacity-0 duration-150 hover:opacity-100">
                                <a href="/detail/${product.name}" class="flex h-8 w-8 cursor-pointer items-center justify-center rounded-full bg-amber-400">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-4 w-4">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
                                    </svg>
                                </a>
                                <span class="flex h-8 w-8 cursor-pointer items-center justify-center rounded-full bg-amber-400">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-4 w-4">
                                        <path d="M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z" />
                                    </svg>
                                </span>
                            </div>
                        </div>

                        <div>
                            <p class="mt-2">${product.name}</p>
                            ${product.discountedPrice ? 
                                `<p class="font-medium text-violet-900">${product.discountedPrice}VND <span class="text-sm text-gray-500 line-through">${product.price}VND</span></p>` :
                                `<p class="font-medium text-violet-900">${product.price}VND</p>`
                            }
                        </div>

                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="h-4 w-4 text-yellow-400">
                                <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd"/>
                            </svg>
                            <p class="text-sm text-gray-400">(38)</p>
                        </div>

                        <div>
                            <button class="my-5 h-10 w-full bg-violet-900 text-white">Add to cart</button>
                        </div>
                    </div>
                `;
            });

            productContainer.innerHTML = newProductList;
        }
    });
</script>

<script>
    document.getElementById('form').addEventListener('submit', handleFormSubmit);
    document.getElementById('search-form').addEventListener('submit', handleFormSubmit);


    async function handleFormSubmit(event) {
        event.preventDefault();

        // Collect selected filters
        const selectedFilters = {};
        document.querySelectorAll('.filter:checked').forEach(input => {
            const filterType = input.dataset.filter;
            const value = input.dataset.value;
            if (!selectedFilters[filterType]) {
                selectedFilters[filterType] = [];
            }
            selectedFilters[filterType].push(value);
        });

        //console.log('Selected Filters:', selectedFilters);
        const searchQuery = document.getElementById('search-input').value || '';
        const excludeProductId = null; // Set this if you need to exclude a specific product
        const limit = 10; // Set the limit as needed

        try {
            const response = await fetch(`/product/search-filter?q=${encodeURIComponent(searchQuery)}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ filters: selectedFilters, excludeProductId, limit }),
            });

            if (response.ok) {
                const products = await response.json();
                displayProducts(products);
            } else {
                console.error('Failed to fetch products');
            }
        } catch (error) {
            console.error('Error fetching products:', error);
        }
    };

    // Function to display products
    function displayProducts(products) {
        const productContainer = document.getElementById('product-list');
        productContainer.innerHTML = '';

        products.forEach(product => {
            const productElement = document.createElement('div');
            productElement.className = 'bg-white rounded-lg shadow-2xl p-4 text-center';
            productElement.onclick = () => window.location.href = `/detail/${formatName(product.name)}`;

            productElement.innerHTML = `
            <img class="product-card mx-auto my-6 object-cover cursor-pointer" src="${product.imageUrl}" alt="${product.name}" >
            <h2 class="text-xl text-[#8c7a6b] m-3 cursor-pointer">${product.name}</h2>
            <p class="text-xl text-[#BD8256] mb-4 cursor-pointer">£${product.price}</p>
            <button class="bg-[#AC6F53] text-white py-3 px-16 rounded-3xl hover:bg-[#7a6c5b]">ADD TO CART</button>
        `;

            productContainer.appendChild(productElement);
        });
    }

    function formatName(name) {
        return name.toLowerCase().replace(/ /g, '-').replace(/[^\w-]+/g, '');
    }

</script>
