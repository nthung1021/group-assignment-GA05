<!-- Register card  -->
<section class="mx-auto mt-10 w-full flex-grow mb-10 max-w-[1200px] px-5">
    <div class="container mx-auto border px-5 py-5 shadow-sm md:w-1/2">
    <div class="">
        <p class="text-4xl font-bold">CREATE AN ACCOUNT</p>
        <p>Register for new customer</p>
    </div>

    <form class="mt-6 flex flex-col" action="/users/register" method="POST">

        <label for="name">Full Name</label>
        <input
        class="mb-3 mt-3 border px-4 py-2"
        type="text"
        name="username"
        required
        />
        <div class="error-message-username text-red-700 text-sm mt-1"></div>
       
        <label class="mt-3" for="email">Email Address</label>
        <input
        class="mt-3 border px-4 py-2"
        type="email"
        name="email"
        required
        />
        <div class="error-message-email text-red-700 text-sm mt-1"></div>

        <label class="mt-5" for="email">Password</label>
        <input
        class="mt-3 border px-4 py-2"
        type="password"
        name="password"
        required
        />

        <label class="mt-5" for="email">Confirm password</label>
        <input
        class="mt-3 border px-4 py-2"
        type="password"
        name="confirmPassword"
        required
        />

        <div class="mt-4 flex justify-items-start">
            <div class="flex gap-2">
                <input type="checkbox" />
                <label for="checkbox">
                    I have read and agree with terms &amp; conditions
                </label>
            </div>
        </div>  

        {{#if success}}
            <div class="error-message text-xl text-center p-1 mb-4 text-green-700 font-bold">
                <p>{{success}}</p>
            </div>
        {{/if}}

        {{#if error}}
            <div class="error-message text-xl text-center p-1 mb-4 text-red-700 font-bold">
                <p>{{error}}</p>
            </div>
        {{/if}}

        <button type="submit" class="my-5 w-full bg-violet-900 py-2 text-white">
            CREATE ACCOUNT
        </button>  
    </form>

    <p class="text-center text-gray-500">OR SIGN UP WITH</p>

    <div class="my-5 flex gap-2">
        <button class="w-1/2 bg-blue-800 py-2 text-white">FACEBOOK</button>
        <button class="w-1/2 bg-orange-500 py-2 text-white">GOOGLE</button>
    </div>

    <p class="text-center">
        Already have an account?
        <a href="/users/login" class="text-violet-900">Login now</a>
    </p>
    </div>
</section>
<!-- /Register Card  -->

<script>
document.addEventListener('DOMContentLoaded', function() {
    const usernameInput = document.querySelector('input[name="username"]');
    const emailInput = document.querySelector('input[name="email"]');
    const form = document.getElementById('form');
    const formErrorDiv = document.getElementById('form-error');

    function checkAvailability(input, fieldName) {
        const value = input.value.trim();
        const errorDiv = document.querySelector(`.error-message-${fieldName}`);
        if (value) {
            fetch(`/users/check-availability?${fieldName}=${encodeURIComponent(value)}`)
                .then(response => response.json())
                .then(data => {
                    if (data.exists) {
                        input.classList.add('border-red-500');
                        errorDiv.textContent = `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} is already exists`;
                    } else {
                        input.classList.remove('border-red-500');
                        errorDiv.textContent = ''; // Clear the error message
                    }
                })
                .catch(err => {
                    console.error('Error checking availability:', err);
                });
        } else {
            input.classList.remove('border-red-500');
            errorDiv.textContent = ''; // Clear the error message
        }
    }

    // Add event listener to clear error when user types
    usernameInput.addEventListener('input', () => {
        const errorDiv = document.querySelector('.error-message-username');
        if (errorDiv) {
            errorDiv.textContent = ''; // Clear the error message while typing
            usernameInput.classList.remove('border-red-500');
        }
    });

    emailInput.addEventListener('input', () => {
        const errorDiv = document.querySelector('.error-message-email');
        if (errorDiv) {
            errorDiv.textContent = ''; // Clear the error message while typing
            emailInput.classList.remove('border-red-500');
        }
    });

    usernameInput.addEventListener('blur', () => {
        checkAvailability(usernameInput, 'username');
    });
    
    emailInput.addEventListener('blur', () => {
        checkAvailability(emailInput, 'email');
    });

    // Clear form or show an alert if there are errors
    form.addEventListener('submit', (e) => {
        e.preventDefault(); // Prevent form from submitting normally

        // Check if there are any error messages displayed
        const errorMessages = document.querySelectorAll('.error-message-username, .error-message-email');
        let hasError = false;

        errorMessages.forEach((errorDiv) => {
            if (errorDiv.textContent.trim() !== '') {
                hasError = true;
            }
        });

        if (hasError) {
             formErrorDiv.textContent = ('Something went wrong');
            return; // Prevent form submission
        }

        formErrorDiv.textContent = '';
        form.submit();
    });
});
</script>

